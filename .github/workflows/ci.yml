name: ci
on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  ci_pre:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.web-changes.outputs.changed }}
      server: ${{ steps.server-changes.outputs.changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # - name: Get changed files
      #   id: changed-web-files
      #   uses: tj-actions/changed-files@v24
      #   with:
      #     files: |
      #       .github/workflows/web.yml
      #       .github/workflows/ci_pre.yml
      #       .github/CODEOWNERS
      #       .renovate.json
      #       web/**
      #       .eslintignore
      - name: Detect web changes
        id: web-changes
        # if: steps.changed-web-files.outputs.any_changed == 'true'
        run: |
          echo "::set-output name=changed::true"
      # - name: Get server changed files
      #   id: changed-server-files
      #   uses: tj-actions/changed-files@v24
      #   with:
      #     files: |
      #       .github/workflows/server.yml
      #       .github/workflows/ci_pre.yml
      #       .github/CODEOWNERS
      #       .renovate.json
      #       server/**
      - name: Detect server changes
        id: server-changes
        # if: steps.changed-server-files.outputs.any_changed == 'true'
        run: |
          echo "::set-output name=changed::true"
  ci_web:
    needs: ci_pre
    if: ${{ needs.ci_pre.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: yarn install
      - name: Lint
        run: yarn run lint
      - name: Test
        run: yarn coverage
      - name: codecov
        uses: codecov/codecov-action@v2
        with:
          flags: web
      - name: Check translations
        run: yarn i18n --fail-on-update
      - name: Build
        run: yarn build
      - name: Build extension
        run: yarn build:ext
      - name: Pack
        run: mv dist reearth-marketplace-web && tar -zcvf reearth-marketplace-web.tar.gz reearth-marketplace-web
      - uses: actions/upload-artifact@v2
        with:
          name: reearth-marketplace-web
          path: web/reearth-marketplace-web.tar.gz
          if-no-files-found: errors
  ci_server:
    needs: ci_pre
    if: ${{ needs.ci_pre.outputs.server == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    services:
      mongo:
        image: mongo:4.4-focal
        ports:
          - 27017:27017
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: checkout
        uses: actions/checkout@v3
      # - name: cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/go/pkg/mod
      #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-
      # - name: golangci-lint
      #   uses: golangci/golangci-lint-action@v3
      #   with:
      #     version: v1.45
      #     working-directory: server
      # - name: test
      #   run: go test ./... -v -race -coverprofile=coverage.txt -covermode=atomic
      #   env:
      #     REEARTH_MARKETPLACE_DB: mongodb://localhost
      # - name: codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     flags: server
      #     file: coverage.txt
  ci:
    runs-on: ubuntu-latest
    needs:
      - ci_web
      - ci_server
    steps:
      - name: Success job
        run: echo "success all ci"
